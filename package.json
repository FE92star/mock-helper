{
  "publisher": "fe92star",
  "name": "yapi-mock-server",
  "displayName": "yapi-mock-server",
  "version": "0.0.2",
  "private": true,
  "packageManager": "pnpm@8.6.0",
  "description": "Mock server for yapi platform",
  "author": "fe92star <1737765939@qq.com> (https://github.com/fe92star/)",
  "license": "MIT",
  "homepage": "https://github.com/FE92star/mock-helper#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/FE92star/mock-helper"
  },
  "bugs": {
    "url": "https://github.com/FE92star/mock-helper/issues"
  },
  "keywords": [
    "mock",
    "yapi",
    "server"
  ],
  "main": "./dist/index.js",
  "icon": "res/icon.png",
  "files": [
    "dist"
  ],
  "engines": {
    "vscode": "^1.78.1"
  },
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "mockHelper",
          "name": "MOCK小助手"
        }
      ]
    },
    "commands": [
      {
        "command": "mockHelper.search",
        "title": "Search for matching api",
        "shortTitle": "Search",
        "icon": {
          "dark": "resources/dark/search.svg",
          "light": "resources/light/search.svg"
        }
      },
      {
        "command": "mockHelper.clearApiFilter",
        "title": "Clear filter",
        "shortTitle": "Clear",
        "icon": {
          "dark": "resources/dark/clear.svg",
          "light": "resources/light/clear.svg"
        }
      },
      {
        "command": "mockHelper.refresh",
        "title": "Fetch the newest api list",
        "shortTitle": "Refresh",
        "icon": {
          "dark": "resources/dark/refresh.svg",
          "light": "resources/light/refresh.svg"
        }
      },
      {
        "command": "mockHelper.runServer",
        "title": "Start a mock server",
        "shortTitle": "Run",
        "icon": {
          "dark": "resources/dark/play.svg",
          "light": "resources/light/play.svg"
        }
      },
      {
        "command": "mockHelper.stopServer",
        "title": "Stop the active mock server",
        "shortTitle": "Stop",
        "icon": {
          "dark": "resources/dark/pause.svg",
          "light": "resources/light/pause.svg"
        }
      },
      {
        "command": "mockHelper.openAndUpdateApiJsonToLocal",
        "title": "Open and update json data to local project",
        "shortTitle": "OpenJson",
        "icon": {
          "dark": "resources/dark/json.svg",
          "light": "resources/light/json.svg"
        }
      },
      {
        "command": "mockHelper.copyApiInfo",
        "title": "copy current api infomation",
        "shortTitle": "Copy",
        "icon": {
          "dark": "resources/dark/copy.svg",
          "light": "resources/light/copy.svg"
        }
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "mockHelper.runServer",
          "when": "view == mockHelper && !serverEnable",
          "group": "navigation"
        },
        {
          "command": "mockHelper.stopServer",
          "when": "view == mockHelper && serverEnable",
          "group": "navigation"
        },
        {
          "command": "mockHelper.refresh",
          "when": "view == mockHelper",
          "group": "navigation"
        },
        {
          "command": "mockHelper.search",
          "when": "view == mockHelper",
          "group": "navigation"
        },
        {
          "command": "mockHelper.clearApiFilter",
          "when": "view == mockHelper && filterEnable",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "mockHelper.openAndUpdateApiJsonToLocal",
          "when": "view == mockHelper && viewItem == coreApiItem",
          "group": "inline"
        },
        {
          "command": "mockHelper.copyApiInfo",
          "when": "view == mockHelper && viewItem == subApiItem",
          "group": "inline"
        }
      ]
    },
    "configuration": {
      "title": "Mock Helper Config",
      "properties": {
        "mockHelper.mock.rootDir": {
          "type": "string",
          "default": "${workspaceFolder}/mock",
          "description": "mock 文件自动生成的根目录"
        },
        "mockHelper.mock.port": {
          "type": "number",
          "default": 10088,
          "description": "mock 服务监听的端口"
        },
        "mockHelper.mock.autoRun": {
          "type": "boolean",
          "default": false,
          "description": "是否在应用启动时启用 mock"
        },
        "mockHelper.configPath": {
          "type": "string",
            "default": "${workspaceFolder}/mock.config.json",
            "description": "mock插件 的配置文件，可以是 require 能解析的任何文件格式"
        }
      }
    }
  },
  "scripts": {
    "build": "tsup src/index.ts --external vscode",
    "dev": "nr build --watch",
    "lint": "eslint .",
    "vscode:prepublish": "nr build",
    "publish": "vsce publish --no-dependencies",
    "pack": "vsce package --no-dependencies",
    "test": "vitest",
    "typecheck": "tsc --noEmit",
    "release": "bumpp && nr publish"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^0.39.5",
    "@antfu/ni": "^0.21.3",
    "@types/http-proxy": "^1.17.13",
    "@types/node": "^18.16.16",
    "@types/request-promise-native": "^1.0.19",
    "@types/vscode": "^1.78.1",
    "@vscode/vsce": "^2.19.0",
    "bumpp": "^9.1.0",
    "eslint": "^8.42.0",
    "esno": "^0.16.3",
    "pnpm": "^8.6.0",
    "rimraf": "^5.0.1",
    "tsup": "^6.7.0",
    "typescript": "^5.1.3",
    "vite": "^4.2.3",
    "vitest": "^0.31.4"
  },
  "dependencies": {
    "body-parser": "^1.20.2",
    "http-proxy": "^1.18.1",
    "path-to-regexp": "^6.2.1",
    "request-promise-native": "^1.0.9"
  }
}
